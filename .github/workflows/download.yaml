name: Download documents

on:
  workflow_call:
    inputs:
      storage-branch:
        description: Branch to store the documents
        type: string
        required: true
      sitemap-url:
        description: URL of the sitemap
        type: string
        required: true
      dashify-command:
        description: Command for building the docset
        type: string
        required: true
      docset-name:
        description: File name for the output docset
        type: string
        required: true
      docset-title:
        description: Title of the output docset
        type: string
        required: true

jobs:
  download:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # -----------------------------------------------------------------------
      # Setup environment
      # -----------------------------------------------------------------------
      - name: Get wget
        run: |
          sudo apt update
          sudo apt install -y wget

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install .

      # -----------------------------------------------------------------------
      # Setup storage
      # -----------------------------------------------------------------------
      - name: Check target branch exists
        id: check-branch
        run: |
          if git ls-remote --exit-code --heads origin refs/heads/${{ inputs.storage-branch }}; then
            echo 'exists=true' | tee -a $GITHUB_OUTPUT
          else
            echo 'exists=false' | tee -a $GITHUB_OUTPUT
          fi

      - name: Prepare storage [1]
        if: steps.check-branch.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
          ref: main
          path: ./docs.aws.amazon.com

      - name: Prepare storage [2]
        if: steps.check-branch.outputs.exists == 'false'
        working-directory: ./docs.aws.amazon.com
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'

          git checkout --orphan ${{ inputs.storage-branch }}
          git reset --hard
          git clean -fdx
          git commit --allow-empty -m 'init'

      - name: Checkout storage
        if: steps.check-branch.outputs.exists == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.storage-branch }}
          path: ./docs.aws.amazon.com

      - name: Clean up storage
        if: steps.check-branch.outputs.exists == 'true'
        run: rm -rf docs.aws.amazon.com/*

      # -----------------------------------------------------------------------
      # Download
      # -----------------------------------------------------------------------
      - name: Parse sitemap
        run: |
          wget ${{ inputs.sitemap-url }} --no-verbose -O- | dashify extract-sitemap-urls >> '${{ runner.temp }}/site-urls.txt'

      - name: Download documents
        run: |
          wget \
            --adjust-extension \
            --content-on-error \
            --input-file='${{ runner.temp }}/site-urls.txt' \
            --mirror \
            --no-parent \
            --no-verbose \
            --page-requisites \
            --reject=pdf,zip \
          || true

      # -----------------------------------------------------------------------
      # Save
      # -----------------------------------------------------------------------
      - name: Save documents
        uses: stefanzweifel/git-auto-commit-action@v5
        id: commit
        with:
          repository: ./docs.aws.amazon.com
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>

      # -----------------------------------------------------------------------
      # Build docset
      # -----------------------------------------------------------------------
      - name: Build docset
        if: steps.commit.changes_detected == 'true'
        run: |
          dashify \
            ${{ inputs.dashify-command }} \
            --site-url $(dirname '${{ inputs.sitemap-url }}') \
            --docset-path '${{ inputs.docset-name }}.docset' \
            --title '${{ inputs.docset-title }}'
          tar cvzf '${{ inputs.docset-name }}.tgz' '${{ inputs.docset-name }}.docset'

      - name: Upload docset
        if: steps.commit.changes_detected == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.docset-name }}
          path: ${{ inputs.docset-name }}.tgz
